@using Newtonsoft.Json
@using nuce.web.quanly.Common
@model nuce.web.quanly.Models.UpdateAnswer
@{
    ViewData["Title"] = "Chi tiết đáp án";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section Style {
    <link rel="stylesheet" href="~/content/css/bootstrap-select.min.css" />
    <link rel="stylesheet" href="~/content/css/dataTables.bootstrap4.min.css" />
    <style>
        .padding-1 div:not(:first-child) {
            margin-top: 10px;
        }
    </style>
}

<form method="post" class="container mt-2 auto-validate">
    <a class="update-btn text-light p-2" style="text-decoration: none;" href="/survey/Answer?questionId=@Model.QuestionId">← Quay lại danh sách đáp án</a>

    <div class="fw-700 text-uppercase font-15-sm font-25 mb-2 mt-3 text-dark">
        Cập nhật đáp án của câu hỏi
    </div>
    <h3 class="font-15-sm font-25 mb-2 mt-3 text-dark">
        @Html.Raw(Model.QuestionContent)
    </h3>

    @if (ViewData["UpdateSuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            @ViewData["UpdateSuccessMessage"]
            <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
        </div>
    }

    @if (ViewData["UpdateErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            @ViewData["UpdateErrorMessage"]
            <hr>
            <p class="mb-0">@ViewData["UpdateErrorMessageDetail"]</p>
            <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
        </div>
    }

    <div class="row font-13-sm font-16 mt-4">
        @Html.TextBoxFor(m => m.AnswerBind.id, new { @type = "hidden" })
        @Html.TextBoxFor(m => m.QuestionId, new { @type = "hidden" })
        @Html.TextBoxFor(m => m.QuestionContent, new { @type = "hidden" })
        @Html.ValidationMessageFor(m => m.AnswerBind.id, "", new { @class = "form-text text-danger" })
        <div class="col-12 form-group">
            <div class="row mr-0 ml-0 align-items-center">
                <div class="font-14-sm fw-600 col-12 col-md-2 pr-0 pl-0">
                    Mã
                </div>
                <div class="col-12 col-md-10">
                    @Html.TextBoxFor(m => m.AnswerBind.code, new { @class = "form-control", disabled = "true" })
                    @*@Html.ValidationMessageFor(m => m.AnswerBind.code, "", new { @class = "form-text text-danger" })*@
                </div>
            </div>
        </div>
        <div class="col-12 form-group">
            <div class="row mr-0 ml-0">
                <div class="font-14-sm fw-600 col-12 pr-0 pl-0 col-md-2">
                    Nội dung
                </div>
                <div class="col-12 col-md-10">
                    @Html.TextAreaFor(m => m.AnswerBind.content, new { @id = "content", @class = "form-control", @required = true })
                    @Html.ValidationMessageFor(m => m.AnswerBind.content, "", new { @class = "form-text text-danger" })
                </div>
            </div>
        </div>
        <div class="col-12 form-group">
            <div class="row mr-0 ml-0">
                <div class="font-14-sm fw-600 col-12 pr-0 pl-0 col-md-2">
                    Thứ tự
                </div>
                <div class=" col-12 col-md-10">
                    @Html.TextBoxFor(m => m.AnswerBind.order, new { @class = "form-control", @type = "number", @required = true })
                    @Html.ValidationMessageFor(m => m.AnswerBind.order, "", new { @class = "form-text text-danger" })
                </div>
            </div>
        </div>
        @if (Model.QuestionType == QuestionType.MC)
        {
            <div id="div-add-child-question" class="col-12 form-group">
                <div class="row mr-0 ml-0">
                    <div class="font-14-sm fw-600 col-12 pr-0 pl-0 col-md-2">
                        Câu hỏi con
                    </div>
                    <div class="col-10 col-md-9">
                        <div id="display-childs" class="h-100 padding-1">
                        </div>

                        <div id="input-childs">
                        </div>
                    </div>
                    <div class="col-2 col-md-1 d-flex justify-content-end">
                        <div>
                            <button type="button" class="btn btn-outline-primary" data-toggle="modal" data-target="#modal-input">Thêm</button>
                        </div>
                    </div>
                </div>
            </div>
        }

        <div class="col-12 form-group d-flex justify-content-center">
            <button type="submit" formaction="/Survey/UpdateAnswer" class="btn btn-primary">
                cập nhật
            </button>
        </div>
    </div>
</form>

<div class="modal fade bd-example-modal-lg auto-clear-form-on-open" id="modal-input" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document" style="min-width:1000px">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="modal-title">Thêm</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="container-fluid">
                    <div class="row mb-3">
                        <div class="col-md-12">
                            <div class="form-row">
                                <div class="col-12 col-md mb-2">
                                    <input class="form-control form-control" id="ma-cauhoi" type="text" placeholder="Tìm theo mã" />
                                </div>
                                <div class="col-6 col-md mb-2">
                                    <input class="form-control form-control" id="noidung" type="text" placeholder="Tìm theo nội dung" />
                                </div>
                                <div class="col-12 col-md mb-2 d-flex flex-row">
                                    <div class="w-25 d-flex justify-content-center align-items-center clear-input" title="Nhập lại">
                                        <i class="fas fa-redo"></i>
                                    </div>
                                    <div class="w-75">
                                        <button id="btn-search" class="btn btn-secondary w-100">Tìm kiếm</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-12">
                            <table id="id-datatable" class="table table-bordered w-100">
                                <thead>
                                    <tr>
                                        <th class="text-center" width="1px">STT</th>
                                        <th class="text-center" width="1px">Mã</th>
                                        <th class="text-center" width="1px">Mã Cha</th>
                                        <th class="text-center">Nội dung</th>
                                        <th class="text-center" style="min-width:120px">Loại</th>
                                        <th></th>
                                    </tr>
                                </thead>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="~/content/js/bootstrap-select.min.js"></script>
    <script src="~/content/js/jquery.dataTables.min.js"></script>
    <script src="~/content/js/dataTables.bootstrap4.min.js"></script>
    <script src="~/content/js/dataTables.config.js"></script>
    <script>
        function genInput(chidQuestionId) {
            let str = ``;
            str += `<input name="AnswerBind.childQuestionId" value="${chidQuestionId}" hidden />`;
            $('#input-childs').html(str);
        }
    </script>
    @if (ViewData["childQuestion"] != null)
    {
        <script>
            let answerChildQuestion = {};
            try {
                answerChildQuestion = JSON.parse('@Html.Raw(ViewData["childQuestion"])');
                $('#display-childs').html(`
                    <div class="d-flex align-items-center border rounded">
                        <p class="m-0 ml-1 p-1 pl-2 pr-2">${answerChildQuestion.content}</p>
                        <button class="ml-auto close pl-1 pr-1" onclick="removeChildQuestion(this, '${answerChildQuestion.id}')" type="button">
                            <span>&times;</span>
                        </button>
                    </div>
                `);
                genInput(answerChildQuestion.id);
            }
            catch {

            }
            let answerChildQuestionId = null;
        </script>
    }
    else
    {
        <script>
            let answerChildQuestionId = null;
        </script>
    }
    <script>

        function addItem(seft, childId, content) {
            $(seft).remove();
            $('#display-childs').html(`
                <div class="d-flex align-items-center border rounded">
                    <p class="m-0 ml-1 p-1 pl-2 pr-2">${content}</p>
                    <button class="ml-auto close pl-1 pr-1" onclick="removeChildQuestion(this, '${childId}')" type="button">
                        <span>&times;</span>
                    </button>
                </div>
            `);
            answerChildQuestionId = childId;
            genInput(childId);
        }
        function removeChildQuestion(seft, childId) {
            $(seft).parent()[0].remove();
            answerChildQuestionId = childId;
            $('#input-childs').html('');
        }
    </script>
    <script>
        var table = $('#id-datatable').DataTable({
            processing: true,
            serverSide: true,
            ordering: false,
            lengthChange: false,
            stateSave: false,
            pageLength: 10,
            language: dataTableConfig.language,
            columnDefs: [
                {
                    targets: [4],
                    className: 'position-relative'
                },
                {
                    targets: [0,1,2,4],
                    className: 'text-center'
                }
            ],
            ajax: {
                url: '/Survey/GetAllQuestion',
                dataType: 'json',
                contentType: 'application/json',
                type: "POST",
                data: function (d) {
                    return JSON.stringify(d);
                },
                complete: () => {
                    autoValidate();
                }
            },
            columns: [
                {
                    data: null
                },
                {
                    data: "code"
                },
                {
                    data: null,
                    name: "parentCode",
                    mRender: function (data, type, row) {
                        if (data.parentCode != null) {
                            return data.parentCode;
                        } else {
                            return '-'
                        }
                    }
                },
                {
                    data: "content"
                },
                {
                    data: null,
                    name: "type",
                    mRender: function (data, type, row) {
                        let questionType = JSON.parse('@Html.Raw(JsonConvert.SerializeObject(Definitions.QuestionType.ToList()))');
                        let result = questionType.find(element => element.Key == data.type);
                        return result.Value;
                    }
                },
                {
                    data: null,
                    mRender: function (data, type, row) {
                        if (data.type === '@(QuestionType.T)' || data.parentCode != null
                            || data.type === '@(QuestionType.GQ)' || data.type === '@(QuestionType.CityC)' || data.type === '@(QuestionType.StarRating)' ) {
                            return '';
                        }
                        return `<button class="btn btn-outline-primary" onclick="addItem(this,'${data.id}', '${data.content}')">Thêm</button>`;
                    }
                }
            ]
        });
        table.on('draw.dt', function () {
            var PageInfo = $('#id-datatable').DataTable().page.info();
            table.column(0, { page: 'current' }).nodes().each(function (cell, i) {
                cell.innerHTML = i + 1 + PageInfo.start;
            });
        });
        $('#id-datatable_filter').hide();
        $("#btn-search").click(() => {
            table
                .column(1).search($("#ma-cauhoi").val())
                .column(3).search($("#noidung").val())
                .column(4).search('@(QuestionType.SA)')
                .draw();
        });
        table.column(4).search('@(QuestionType.SA)').draw();
    </script>
}



