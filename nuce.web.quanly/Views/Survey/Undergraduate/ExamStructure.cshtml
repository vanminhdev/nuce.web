@using nuce.web.quanly.Common
@using Newtonsoft.Json
@{
    ViewData["Title"] = "Cấu trúc đề thi";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section Style {
    <link rel="stylesheet" href="~/content/css/dataTables.bootstrap4.min.css" />
    <link rel="stylesheet" href="~/content/css/bootstrap-select.min.css" />
    <style>
    </style>
}

<div class="container mt-2">
    <div class="row mb-4">
        <div class="col-12">
            <a class="update-btn text-light p-2" style="text-decoration: none;" href="/survey/undergraduateexamquestions">← Quay lại danh sách phiếu khảo sát</a>
        </div>
    </div>
    <div class="row">
        <div class="col-12">
            <form id="form-add-question auto-validate" class="row">
                <div class="col d-flex justify-content-end">
                    <div class="form-group">
                        <button type="button" id="btn-add-question" class="btn btn-primary">Thêm câu hỏi</button>
                        <button type="button" id="btn-generate-exam" class="btn btn-success">Lưu cấu trúc</button>
                    </div>
                </div>
            </form>
        </div>
    </div>

    <div class="row">
        <div class="col-md-12">
            @*<table class="table table-bordered">
                    <thead>
                        <tr>
                            <th class="text-center" width="10%">STT</th>
                            <th class="text-center" width="10%">Mã</th>
                            <th class="text-center">Nội dung</th>
                            <th class="text-center" width="10%">Loại</th>
                            <th class="text-center" width="10%">Thứ tự</th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody id="tbody-data">
                    </tbody>
                </table>*@
            <div>
                <ul id="structure-data" style="list-style-type: decimal;">
                    <li class="p-2 mt-1 mb-1 border border-secondary rounded text-dark">
                        <div class="row">
                            <div class="col-1 d-flex align-items-center justify-content-center pr-0">
                                012345
                            </div>
                            <div class="col">
                                <div class="row">
                                    <p class="col-10 mb-0">
                                        Content
                                    </p>
                                    <p class="col mb-0 d-flex align-items-center justify-content-center px-0">
                                        Chỉ là tiêu đề
                                    </p>
                                </div>
                            </div>
                            <div class="col-1 d-flex align-items-center justify-content-center">
                                <button class="btn btn-outline-danger" onclick="deleteClick('')">Xoá</button>
                            </div>
                        </div>
                    </li>
                </ul>
            </div>
        </div>
    </div>
</div>

<div class="modal fade bd-example-modal-lg auto-clear-form-on-open" id="modal-input" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document" style="min-width:1000px">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="modal-title">Thêm</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="container-fluid">
                    <div class="row mb-3">
                        <div class="col-md-12">
                            <div class="form-row">
                                <div class="col-12 col-md mb-2">
                                    <input class="form-control form-control" id="ma-cauhoi" type="text" placeholder="Tìm theo mã" />
                                </div>
                                <div class="col-6 col-md mb-2">
                                    <input class="form-control form-control" id="noidung" type="text" placeholder="Tìm theo nội dung" />
                                </div>
                                <div class="col-6 col-md mb-2">
                                    @Html.DropDownList("type", new SelectList(Definitions.QuestionType, "Key", "Value"),
                                        new { @id = "loai", @class = "selectpicker form-control custom-boostrap-select", title = "Tìm theo loại câu hỏi" })
                                </div>
                                <div class="col-12 col-md mb-2 d-flex flex-row">
                                    <div class="w-25 d-flex justify-content-center align-items-center clear-input" title="Nhập lại">
                                        <i class="fas fa-redo"></i>
                                    </div>
                                    <div class="w-75">
                                        <button id="btn-search" class="btn btn-secondary w-100">Tìm kiếm</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-12">
                            <table id="id-datatable" class="table table-bordered w-100">
                                <thead>
                                    <tr>
                                        <th class="text-center" width="1px">STT</th>
                                        <th class="text-center" width="1px">Mã</th>
                                        <th class="text-center" width="1px">Mã Cha</th>
                                        <th class="text-center">Nội dung</th>
                                        <th class="text-center" style="min-width:120px">Loại</th>
                                        <th></th>
                                    </tr>
                                </thead>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="modal-yes-no" tabindex="-1" role="dialog" aria-labelledby="modal-yes-no" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="modal-yes-no-title">Xác nhận xoá</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body" id="modal-yes-no-content">
                Xoá câu hỏi khỏi bài khảo sát ?
            </div>
            <input id="delete-id" name="id" hidden />
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Không</button>
                <button id="choose-yes" type="button" class="btn btn-primary">Có</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="~/content/js/bootstrap-select.min.js"></script>
    <script src="~/content/js/jquery.dataTables.min.js"></script>
    <script src="~/content/js/dataTables.bootstrap4.min.js"></script>
    <script src="~/content/js/dataTables.config.js"></script>
    <script>
        var table = $('#id-datatable').DataTable({
            processing: true,
            serverSide: true,
            ordering: false,
            lengthChange: false,
            stateSave: false,
            pageLength: 10,
            language: dataTableConfig.language,
            columnDefs: [
                {
                    targets: [5],
                    className: 'position-relative'
                },
                {
                    targets: [0,1,2,4],
                    className: 'text-center'
                }
            ],
            ajax: {
                url: '/Survey/GetAllUndergraduateQuestion',
                dataType: 'json',
                contentType: 'application/json',
                type: "POST",
                data: function (d) {
                    return JSON.stringify(d);
                },
                complete: () => {
                    autoValidate();
                }
            },
            columns: [
                {
                    data: null
                },
                {
                    data: "code"
                },
                {
                    data: null,
                    name: "parentCode",
                    mRender: function (data, type, row) {
                        if (data.parentCode != null) {
                            return data.parentCode;
                        } else {
                            return '-'
                        }
                    }
                },
                {
                    data: "content"
                },
                {
                    data: null,
                    name: "type",
                    mRender: function (data, type, row) {
                        let questionType = JSON.parse('@Html.Raw(JsonConvert.SerializeObject(Definitions.QuestionType.ToList()))');
                        let result = questionType.find(element => element.Key == data.type);
                        return result.Value;
                    }
                },
                {
                    data: null,
                    mRender: function (data, type, row) {
                        if (data.parentCode != null) {
                            return '';
                        }
                        return `<div id="${data.id}" class="add-box position-absolute bg-light p-2 border rounded" style="top: 2px;right:-190px; display:none">
                                    <form id="add-box-${data.id}" class="d-flex auto-validate">
                                        <input name="examQuestionId" value="@ViewData["ExamQuestionId"]" hidden />
                                        <input name="questionCode" value="${data.code}" hidden />
                                        <input class="form-control mr-1" style="width:110px;" value="${data.order}" name="order" placeholder="Thứ tự" required/>
                                        <button type="button" class="btn btn-primary" onclick="addItem('${data.id}')" >Lưu</button>
                                    </form>
                                </div>
                                <button class="btn btn-outline-primary" onclick="showAddBox('${data.id}')">Thêm</button>`;
                    }
                }
            ]
        });
        table.on('draw.dt', function () {
            var PageInfo = $('#id-datatable').DataTable().page.info();
            table.column(0, { page: 'current' }).nodes().each(function (cell, i) {
                cell.innerHTML = i + 1 + PageInfo.start;
            });
        });
        $('#id-datatable_filter').hide();
        $("#btn-search").click(() => {
            table
                .column(1).search($("#ma-cauhoi").val())
                .column(3).search($("#noidung").val())
                .column(4).search($("#loai").val())
                .draw();
        });

        function showAddBox(id) {
            console.log(id);
            let addBox = $('#' + id);
            if (!addBox.is(':visible')) {
                addBox.show();
            } else {
                addBox.hide();
            }
        }

        function addItem(addBoxId) {
            let addBoxForm = $('#add-box-' + addBoxId);
            if (addBoxForm.valid()) {
                $.ajax({
                    data: getFormData('#add-box-' + addBoxId),
                    dataType: 'json',
                    method: 'Post',
                    url: '/Survey/AddUndergraduateQuestionExam',
                    complete: () => { }
                }).done(function (res) {
                    if (res.statusCode === 200) {
                        toastSuccess('Lưu thành công');
                        $('#' + addBoxId).hide();
                        loadDataTable();
                    }
                    else {
                        try {
                            let content = JSON.parse(res.content);
                            toastError(content.message);
                        } catch (error) {
                            toastError('Có lỗi xảy ra');
                        }
                        console.log(res);
                    }
                }).fail(function (jqXHR, textStatus, errorThrown) {
                    console.log(textStatus + ': ' + errorThrown);
                    console.log(jqXHR);
                });
            }
        }
    </script>
    <script>
        function loadDataTable() {
            $.ajax({
                dataType: 'json',
                method: 'Get',
                url: '/Survey/GetUndergraduateStructure?examQuestionId=' + '@ViewData["ExamQuestionId"]'
            }).done(function (data) {
                let htmlstr = "";
                if (data.length === 0) {
                    htmlstr = "<li class='text-dark text-center'>Danh sách rỗng</li>";
                }
                else {
                    let questionType = JSON.parse('@Html.Raw(JsonConvert.SerializeObject(Definitions.QuestionType.ToList()))');

                    data.forEach(item => {
                        htmlstr += `<li cauHoiId="${item.questionId}" class="p-2 mt-1 mb-1 border border-secondary rounded text-dark">
                            <div class="row">
                                <div class="col-1 d-flex align-items-center justify-content-center pr-0">
                                    ${item.code}
                                </div>
                                <div class="col d-flex">
                                    <div class="row row d-flex align-items-center w-100">`;

                        if (item.type == '@(QuestionType.T)') {
                            htmlstr += `<p class="col-10 mb-0 font-weight-bold">
                                            ${item.content}
                                        </p>`;
                        } else {
                            htmlstr += `<p class="col-10 mb-0">
                                            ${item.content}
                                        </p>`;
                        }

                        let result = questionType.find(element => element.Key == item.type);

                        htmlstr += `<p class="col mb-0 d-flex align-items-center justify-content-center px-0">
                                            ${result.Value}
                                        </p></div>
                                </div>
                                <div class="col-1 d-flex align-items-center justify-content-center">
                                    <button class="btn btn-outline-danger" onclick="deleteClick('${item.id}')">Xoá</button>
                                </div>
                            </div>
                        </li>`;
                    });
                }
                $('#structure-data').html(htmlstr);
                $("#structure-data").sortable({
                    change: function (event, ui) {
                        $('#btn-generate-exam').prop('disabled', false);
                    }
                });
            }).fail(function (jqXHR, textStatus, errorThrown) {
                console.log(textStatus + ': ' + errorThrown);
            });
        }
        loadDataTable();

        $('#btn-add-question').click(() => {
            $('#modal-input').modal('show');
            $('#modal-title').html('Thêm câu hỏi');
        });

        $('#modal-input').on('shown.bs.modal', function () {
            $('.add-box').hide();
        });

        $('#btn-generate-exam').click(() => {
            $('#loading-screen').show();
            let sortResult = [];
            $('#structure-data').children().find("li").prevObject.each(function (index) {
                sortResult.push({ cauHoiId: $(this).attr('cauHoiId'), order: index + 1 });
            });

            $.ajax({
                data: { examQuestionId: '@ViewData["ExamQuestionId"]', sortResult},
                dataType: 'json',
                method: 'Post',
                url: '/Survey/GenerateUndergraduateExam',
                complete: () => {}
            }).done(function (res) {
                $('#loading-screen').hide();
                if (res.statusCode === 200) {
                    loadDataTable();
                    toastSuccess('Lưu thành công');
                }
                else {
                    try {
                        let content = JSON.parse(res.content);
                        toastError(content.message);
                    } catch (error) {
                        toastError('Có lỗi xảy ra');
                    }
                    console.log(res);
                }
            }).fail(function (jqXHR, textStatus, errorThrown) {
                $('#loading-screen').hide();
                console.log(textStatus + ': ' + errorThrown);
            });
        });

        function deleteClick(id) {
            $('#modal-yes-no').modal('show');
            $('#delete-id').val(id);
        }

        $('#choose-yes').click(function () {
            $.ajax({
                data: { id: $('#delete-id').val() },
                dataType: 'json',
                method: 'Post',
                url: `/Survey/DeleteUndergraduateQuestionFromStructure`,
                complete: () => { }
            }).done(function (res) {
                if (res.statusCode === 200) {
                    toastSuccess('Xoá thành công');
                    $('#modal-yes-no').modal('hide');
                    loadDataTable();
                }
                else {
                    toastError('Có lỗi xảy ra');
                    console.log(res);
                }
            }).fail(function (jqXHR, textStatus, errorThrown) {
                console.log(textStatus + ': ' + errorThrown);
                console.log(jqXHR);
            });
        });
    </script>
}