@using System.Configuration;

@{
    ViewBag.Title = "Chi tiết dịch vụ";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
    @@media only screen and (min-width: 1025px) {
        .search-bar-wrp input {
            padding: 16px 8px;
        }
    }

    @@media only screen and (min-width: 1025px) {
        .main-content-wrp {
            margin-top: 0;
        }
    }

    .checkbox-select {
        cursor: pointer;
    }

    .search-icon-wrapper {
        padding: 3px 8px;
    }
</style>
<div class="row main-content-wrp ml-0 mr-0">
    <div class="col-12">
        <div class="row">
            <div class="col-12">
                <a class="update-btn text-light p-2 mb-3"
                   style="text-decoration: none; display: inline-block"
                   href="/ctsvservicemanagement/index">← Quay lại danh sách</a>
                <div id="divTitle" class="main-color text-uppercase font-15-sm fw-600 font-25 service-title">
                    dịch vụ xin giấy xác nhận
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-4 search-bar-wrp mb-3">
                <div class="input-group">
                    <div class="input-group-prepend">
                        <span class="input-group-text search-icon-wrapper" id="basic-addon1">
                            <img src="/content/images/icons/search.png"
                                 alt=""
                                 class="search-icon" />
                        </span>
                    </div>
                    <input id="txt-srvc-search"
                           type="text"
                           class="form-control"
                           placeholder="Search..."
                           aria-describedby="basic-addon1" />
                </div>
            </div>
            <div class="col-4">
                <select class="form-control" id="slChonNgay" onchange="onChangeDateRange(this);">
                    <option value="7">Trong vòng 7 ngày</option>
                    <option value="14">Trong vòng 14 ngày</option>
                    <option value="21">Trong vòng 21 ngày</option>
                    <option value="30">Trong vòng 30 ngày</option>
                    <option value="60">Trong vòng 60 ngày</option>
                    <option value="90">Trong vòng 90 ngày</option>
                    <option value="365">Trong vòng 1 năm</option>
                    <option value="null">Cũ hơn</option>
                </select>
            </div>

            @if ((int)ViewData["id"] == 9)
            {
                <div class="col-sm-4" style="text-align: right">
                    <button type="button" class="btn btn-primary"
                            onclick="danhSachDotDangKy()">
                        Đợt đăng ký chỗ ở
                    </button>
                    <button type="button" class="btn btn-success"
                            onclick="onExportExcelDotDangKy()">
                        Excel
                    </button>
                </div>
            }
            else if ((int)ViewData["id"] == 10)
            {
                <div class="col-sm-4" style="text-align: right">
                    <button type="button" class="btn btn-primary"
                            onclick="danhSachDotDangKy()">
                        Đợt xin miễn giảm học phí
                    </button>
                    <button type="button" class="btn btn-success"
                            onclick="onExportExcelDotDangKy()">
                        Excel
                    </button>
                </div>
            }
            else if ((int)ViewData["id"] == 11)
            {
                <div class="col-sm-4" style="text-align: right">
                    <button type="button" class="btn btn-primary"
                            onclick="danhSachDotDangKy()">
                        Đợt đề nghị hỗ trợ chi phí học tập
                    </button>
                    <button type="button" class="btn btn-success"
                            onclick="onExportExcelDotDangKy()">
                        Excel
                    </button>
                </div>
            }
            else if ((int)ViewData["id"] == 12)
            {
                <div class="col-sm-4" style="text-align: right">
                    <button type="button" class="btn btn-primary"
                            onclick="danhSachDotDangKy()">
                        Đợt đề nghị hỗ trợ học tập
                    </button>
                    <button type="button" class="btn btn-success"
                            onclick="onExportExcelDotDangKy()">
                        Excel
                    </button>
                </div>
            }
            else
            {
                <div class="col-sm-4" style="text-align: right">
                    <button type="button" class="btn btn-success"
                            onclick="onExportExcel()">
                        Excel
                    </button>
                    <button type="button" class="btn btn-primary"
                            onclick="onExportWordList()">
                        In
                    </button>
                    <button type="button" class="btn btn-info"
                            onclick="onClickChangeMultiStatus()">
                        Chuyển trạng thái
                    </button>
                </div>
            }
        </div>
        <div class="row">
            <div class="col-12">
                <table id="qldv-detail-datatable" data-page-length='25' class="table m-table-no-border-y">
                </table>
            </div>
        </div>
        <!-- Modal Chuyển trạng thái -->
        <div class="modal fade"
             id="update-status-modal"
             tabindex="-1"
             role="dialog"
             aria-labelledby="exampleModalCenterTitle"
             aria-hidden="true">
            <div class="modal-dialog modal-lg"
                 role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title font-14-sm fw-700">
                            Chuyển trạng thái
                        </h5>
                        <button type="button"
                                class="close"
                                data-dismiss="modal"
                                aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <form action="">
                            <!-- TRẠNG THÁI -->
                            <div class="fw-700 font-13-sm">Trạng thái:</div>
                            <select id="slUpdateStatus"
                                    onchange="onChangeStatus(this)"
                                    class="form-control mt-3">
                                <option value="3">Đã tiếp nhận và đang xử lý</option>
                                <option value="4">Đã xử lý và có lịch hẹn</option>
                                <option value="5">Từ chối dịch vụ</option>
                                <option value="6">Hoàn thành</option>
                            </select>
                            <!-- NGÀY HẸN -->
                            <div id="blockNgayHen" class="mt-3">
                                <div class="form-group m-0">
                                    <label class="cursor-pointer">
                                        <input type="checkbox"
                                               id="cbNgayHen"
                                               onclick="onChangeOptionUpdateNgayHen(this)" />
                                        <span class="fw-700 font-14-sm">Tự điều chỉnh ngày hẹn</span>
                                    </label>
                                </div>
                                <div id="divNgayHen" class="mt-3">
                                    <table class="table">
                                        <tr>
                                            <td colspan="6" class="fw-700 font-13-sm">Thời gian hẹn sinh viên:</td>
                                        </tr>
                                        <tr>
                                            <td colspan="6" class="fw-700 font-13-sm">Ngày giờ bắt đầu:</td>
                                        </tr>
                                        <tr>
                                            <td class="fw-700 font-13-sm" style="border: none; text-align: center; vertical-align: middle;">ngày (dd/mm/yyyy): </td>
                                            <td style="width: 30%; border: none;">
                                                <input type="text" class="form-control" id="txtNgayBatDau" autocomplete="off">
                                            </td>
                                            <td class="fw-700 font-13-sm" style="width: 8%; border: none; text-align: center; vertical-align: middle;">Giờ:</td>
                                            <td style="width: 12%; border: none;">
                                                <input type="text" class="form-control" id="txtGioBatDau">
                                            </td>
                                            <td class="fw-700 font-13-sm" style="width: 8%; border: none; text-align: center; vertical-align: middle;">Phút:</td>
                                            <td style="width: 12%; border: none;">
                                                <input type="text" class="form-control" id="txtPhutBatDau">
                                            </td>
                                        </tr>
                                        <tr>
                                            <td class="fw-700 font-13-sm" colspan="6">Ngày giờ kết thúc</td>
                                        </tr>
                                        <tr>
                                            <td class="fw-700 font-13-sm" style="width: 30%; border: none; text-align: center; vertical-align: middle;">ngày (dd/mm/yyyy): </td>
                                            <td style="width: 30%; border: none;">
                                                <input type="text" class="form-control" id="txtNgayKetThuc" autocomplete="off">
                                            </td>
                                            <td class="fw-700 font-13-sm" style="width: 8%; border: none; text-align: center; vertical-align: middle;">Giờ:</td>
                                            <td style="width: 12%; border: none;">
                                                <input type="text" class="form-control" id="txtGioKetThuc">
                                            </td>
                                            <td class="fw-700 font-13-sm" style="width: 8%; border: none; text-align: center; vertical-align: middle;">Phút:</td>
                                            <td style="width: 12%; border: none;">
                                                <input type="text" class="form-control" id="txtPhutKetThuc">
                                            </td>
                                        </tr>
                                    </table>
                                </div>
                                <div id="divConfirm" class="mt-3 text-danger" style="font-weight: bold">

                                </div>
                                <div id="divWarning" class="mt-3 text-primary" style="font-weight: bold">

                                </div>
                            </div>
                            <!-- PHẢN HỒI -->
                            <div id="divPhanHoi" class="mt-3">
                                <div class="fw-700 font-13-sm">Phản hồi:</div>
                                <textarea class="form-control mt-3" id="PhanHoi"></textarea>
                            </div>
                            <button class="update-btn text-light w-100 text-uppercase font-14-sm pt-2 pb-2 mt-4"
                                    type="button"
                                    onclick="onUpdateStatus(this)">
                                cập nhật
                            </button>
                        </form>
                    </div>
                </div>
            </div>
        </div>
        <!-- Modal Thông báo -->
        <div id="myModalThongBao"
             class="modal fade"
             role="dialog">
            <div class="modal-dialog"
                 role="document">
                <!-- Modal content-->
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title font-14-sm fw-700">
                            Thông báo
                        </h5>
                        <button type="button"
                                class="close"
                                data-dismiss="modal"
                                aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body" style="text-align: center;">
                        <p id="h_noidung_thongbao"></p>
                    </div>
                    <div class="modal-footer text-right">
                        <button type="button"
                                class="btn btn-default"
                                data-dismiss="modal">
                            Thoát
                        </button>
                    </div>
                </div>
            </div>
        </div>
        <!-- Modal confirm -->
        <div id="myModalConfirm" class="modal fade" role="dialog">
            <div class="modal-dialog">
                <!-- Modal content-->
                <div class="modal-content">
                    <div class="modal-header">
                        <h4 class="modal-title font-14-sm fw-700">Xác nhận</h4>
                        <button type="button" class="close" data-dismiss="modal">&times;</button>
                    </div>
                    <div class="modal-body" style="text-align: center;">
                        <p id="h-confirm-content"></p>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-default" data-dismiss="modal">Thoát</button>
                        <button id="btn-activate" type="button"
                                onclick="onUpdateMultiStatus()"
                                class="btn btn-primary">
                            Xác nhận
                        </button>
                    </div>
                </div>
            </div>
        </div>
        <!-- Modal Update MƯỢN HỌC BẠ -->
        <div id="myModalUpdateMuonHocBa" class="modal fade" role="dialog">
            <div class="modal-dialog">
                <!-- Modal content-->
                <div class="modal-content">
                    <div class="modal-header">
                        <h4 class="modal-title font-14-sm fw-700">Cập nhật thông tin</h4>
                        <button type="button" class="close" data-dismiss="modal">&times;</button>
                    </div>
                    <div class="modal-body">
                        <div class="mt-3">
                            <div class="fw-700 font-13-sm">Ngày trả dự kiến:</div>
                            <div class="row">
                                <div class="col-6">
                                    <input type="text" class="form-control" id="txtMuonHocBaNgayTra" placeholder="Ngày" />
                                </div>
                                <div class="col-3">
                                    <input type="text" class="form-control" id="txtMuonHocBaGioTra" placeholder="Giờ" />
                                </div>
                                <div class="col-3">
                                    <input type="text" class="form-control" id="txtMuonHocBaPhutTra" placeholder="Phút" />
                                </div>
                            </div>
                        </div>
                        <div class="mt-3">
                            <div class="fw-700 font-13-sm">Mô tả:</div>
                            <textarea class="form-control mt-3" id="txtMuonHocBaMoTa"></textarea>
                        </div>
                        <div class="mt-3">
                            <div class="fw-700 font-13-sm">Ghi chú:</div>
                            <textarea class="form-control mt-3" id="txtMuonHocBaGhiChu"></textarea>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-default" data-dismiss="modal">Thoát</button>
                        <button id="btn-activate" type="button"
                                onclick="onUpdatePartialMuonHocBa()"
                                class="btn btn-primary">
                            Xác nhận
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


@section Scripts {
    <link href="~/content/css/bootstrap-datepicker3.min.css" rel="stylesheet" />

    <script src="~/content/js/jquery.dataTables.min.js"></script>
    <script src="~/content/js/dataTables.bootstrap4.min.js"></script>
    <script src="~/content/js/dataTables.config.js"></script>
    <script src="~/content/js/bootstrap-datepicker.min.js"></script>
    <script src="~/content/js/bootstrap-datepicker.vi.min.js"></script>
    <script>
        var serviceType = @ViewData["id"];
        var selectedYeuCau = null;
        var statusDictionary = {
            2: "Đã gửi lên nhà trường",
            3: "Đã tiếp nhận và đang xử lý",
            4: "Đã xử lý và có lịch hẹn",
            5: "Từ chối dịch vụ",
            6: "Hoàn thành",
        };
        var serviceDictionary = {
            1: {
                name: 'dịch vụ xin giấy xác nhận',
                key: 'XAC_NHAN',
            },
            2: {
                name: 'giấy giới thiệu',
                key: 'GIOI_THIEU',
            },
            3: {
                name: 'cấp lại thẻ sinh viên',
                key: 'CAP_LAI_THE_SV',
            },
            4: {
                name: 'ưu đãi trong giáo dục',
                key: 'UU_DAI',
            },
            5: {
                name: ' mượn học bạ gốc',
                key: 'MUON_HOC_BA_GOC',
            },
            6: {
                name: 'vay vốn ngân hàng chính sách - xã hội',
                key: 'VAY_VON',
            },
            7: {
                name: 'đăng ký nhà ở ktx pháp vân - tứ hiệp',
                key: 'THUE_KTX',
            },
            8: {
                name: 'làm vé tháng xe bus',
                key: 'VE_XE_BUS',
            },
            9: {
                name: 'đăng ký chỗ ở',
                key: 'DANG_KY_CHO_O',
            },
            10: {
                name: 'xin miễn giảm học phí',
                key: 'XIN_MIEN_GIAM_HOC_PHI',
            },
            11: {
                name: 'đề nghị hỗ trợ chi phí học tập',
                key: 'DE_NGHI_HO_TRO_CHI_PHI',
            },
            12: {
                name: 'đề nghị hỗ trợ học tập',
                key: 'DE_NGHI_HO_TRO_HOC_TAP',
            },
        };
        var templateStatus = {
            2: 'text-warning',
            3: 'text-primary',
            4: 'text-success',
            5: 'text-danger',
        };
        var getDichVuEnum = function() {
            const result = {};
            Object.keys(serviceDictionary).forEach(key => {
                result[serviceDictionary[key].key] = key * 1;
            });
            return result;
        };
        var dichVuEnum = getDichVuEnum();

        var initDatepicker = function() {
            var date_input_ngaybatdau = $('#txtNgayBatDau'); //our date input has the name "date"
            var date_input_ngayketthuc = $('#txtNgayKetThuc'); //our date input has the name "date"
            var date_input_ngaytradukien = $('#txtMuonHocBaNgayTra'); //our date input has the name "date"


            var options = {
                format: 'dd/mm/yyyy',
                todayHighlight: true,
                autoclose: true,
            };
            date_input_ngaybatdau.datepicker(options);
            date_input_ngayketthuc.datepicker(options);
            date_input_ngaytradukien.datepicker(options);
        }

        var timeToString = function(value) {
            const actualMonth = `${value}`;
            const prefix = actualMonth.length === 1 ? '0' : '';
            return `${prefix}${actualMonth}`;
        }

        var convertDateTime = function(date = '') {
            var entryDateTime = new Date(date);
            return `${this.timeToString(entryDateTime.getDate())}/${this.timeToString(entryDateTime.getMonth() + 1)}/${entryDateTime.getFullYear()}`;
        };

        var convertNumberFromText = function(inputText) {
            var opera1 = inputText.split('/');
            var opera2 = inputText.split('-');
            lopera1 = opera1.length;
            lopera2 = opera2.length;
            // Extract the string into month, date and year
            if (lopera1 > 1) {
                var pdate = inputText.split('/');
            }
            else if (lopera2 > 1) {
                var pdate = inputText.split('-');
            }
            var dd = parseInt(pdate[0]);
            var mm = parseInt(pdate[1]);
            var yy = parseInt(pdate[2]);
            return dd + mm * 31 + yy * 12 * 31;
        };

        var dataList = [];
        var isUpdateStatusMulti = false;
        var selectedIndex = [];
        var fillData = function(dichVuID) {
            isUpdateStatusMulti = false;
            $('#divConfirm').html('');
            showThongBaoOnStatusForm('');
            if (Array.isArray(dataList)) {
                dataList.forEach(item => {
                    if (item.DichVu.id === `${dichVuID}`) {
                        selectedYeuCau = {...item};

                        const status = generateStatusOptions(item.DichVu.status * 1);
                        onChangeStatus({value: status});
                    }
                });
            }
        };
        var onRowClick = function (dichVuID) {
            isUpdateStatusMulti = false;
            $('#divConfirm').html('');
            showThongBaoOnStatusForm('');
            if (Array.isArray(dataList)) {
                dataList.forEach(item => {
                    if (item.DichVu.id === `${dichVuID}`) {
                        selectedYeuCau = { ...item };
                    }
                });
            }
        }

        var generateStatusOptions = function(status = 1) {
            let options = `<option value="3">Đã tiếp nhận và đang xử lý</option>
                    <option value="4">Đã xử lý và có lịch hẹn</option>
                    <option value="5">Từ chối dịch vụ</option>`;
            switch(status) {
                case 3:
                    options = `<option value="4">Đã xử lý và có lịch hẹn</option>
                            <option value="5">Từ chối dịch vụ</option>`;
                    status = 4;
                    break;
                case 4:
                    options = `<option value="5">Từ chối dịch vụ</option>`;
                    status = 5;
                    break;
                case 5:
                    options = `<option value="4">Đã xử lý và có lịch hẹn</option>`;
                    status = 4;
                    break;
                default:
                    break;
            };
            if (serviceType == 5) {
                options += `<option value="6">Hoàn thành</option>`;
            }
            $(`#slUpdateStatus`).html(options);
            return status;
        }

        var updateselectedDataIndex = function(clickIndex = 0, field = '') {
            const isChecked = $(`#${clickIndex}-${field}`).is(':checked');
            handleSelectedData(clickIndex, isChecked, selectedIndex);
            const count = selectedIndex.length;
            const maxLength = dataList.length;
            if (count === 0) {
                $(`#select-all`).prop({checked: false, indeterminate: false});
                return;
            }
            if (count === maxLength) {
                $(`#select-all`).prop({checked: true, indeterminate: false});
                return;
            }
            $(`#select-all`).prop({
                indeterminate: true,
                checked: false
            });
        };

        var handleSelectedData = function(itemIndex = 0, isChecked, selectedIndex = []) {
            if (isChecked && !selectedIndex.includes(itemIndex)) {
                selectedIndex.push(itemIndex);
            } else if (!isChecked) {
                const index = selectedIndex.indexOf(itemIndex);
                selectedIndex.splice(index, 1);
            }
        };

        var onSelectAll = function(selectAllId = 'select-all') {
            const isChecked = $(`#${selectAllId}`).is(':checked');
            for(let i = 0; i < dataList.length; i++) {
                handleSelectedData(i, isChecked, selectedIndex);
                $(`#${i}-select`).prop({ checked: isChecked });
            }
            if(!isChecked) {
                selectedIndex = [];
            }
        };

        var replaceFailedAvatar = function() {
            $('.list-item-avatar').each(function(index, el) {
                const id = $(el).attr('id');
                $('<img/>')
                    .on('error', () => {
                        $(`#${id}`).attr('src', `/content/images/person.png`);
                    })
                    .attr("src", $(`#${id}`).attr('src'))
                ;
            });
        }

        var getMainContentSection = function(dichVu) {
            let result = '';
            $('#divCustomMuonHocBa').hide();
            switch (Number(serviceType)) {
                case dichVuEnum.XAC_NHAN:
                    result = `<div class="mb-3">${dichVu.lyDo}</div>`;
                    break;
                case dichVuEnum.GIOI_THIEU:
                    result = `<div class="mb-3">
                                    <b>Kính gửi: </b>${dichVu.donVi}<br>
                                    <b>Đến gặp: </b>${dichVu.denGap}<br>
                                    <b>Về việc: </b>${dichVu.veViec}<br>
                                </div>`;
                    break;
                case dichVuEnum.VAY_VON:
                    const ThuocDien = {
                        1: 'Không miễn giảm',
                        2: 'Giảm học phí',
                        3: 'Miễn học phí',
                    };
                    const ThuocDoiTuong = {
                        1: 'Mồ côi',
                        2: 'Không mồ côi',
                    };
                    result = `<div class="mb-3"><b>Thuộc diện: </b>${ThuocDien[dichVu.thuocDien]}<br><b>Thuộc đối tượng: </b>${ThuocDoiTuong[dichVu.thuocDoiTuong]}</div>`;
                    break;
                case dichVuEnum.MUON_HOC_BA_GOC:
                    if (dichVu.ngayTra || dichVu.ngayHenDenNgay) {
                        console.log(dichVu)
                        result = `<div class="mb-3">
                                    <b>Thời gian đăng ký mượn: </b>${dichVu.ngayMuon ? convertDateTime(dichVu.ngayMuon) : ''}<br>
                                    <b>Thời gian trả (dự kiến): </b>${dichVu.ngayMuon ? convertDateTime(dichVu.ngayTraDuKien) : ''}<br>
                                    <b>Mô tả: </b>${dichVu.description || ''}<br>
                                    <b>Ghi chú: </b>${dichVu.notice || ''}
                                </div>`;
                    }
                    $('#divCustomMuonHocBa').show();
                    break;
                case dichVuEnum.THUE_KTX:
                    result = '';
                    break;
                case dichVuEnum.VE_XE_BUS:
                    if (dichVu.tuyenType === '1') {
                        result = `<div>Loại tuyến: Một tuyến</div><div>Số tuyến: ${dichVu.tuyenCode || ''}</div>`;
                    } else if (dichVu.tuyenType === '2') {
                        result = `<div>Loại tuyến: Liên tuyến</div>`;
                    }
                    result += `<div>Nơi nhận thẻ: ${dichVu.noiNhanThe}</div>`;
                    break;
                case dichVuEnum.DANG_KY_CHO_O:
                    result += `<div></div>`;
                    break;
                case dichVuEnum.XIN_MIEN_GIAM_HOC_PHI:
                    console.log(dichVu.doiTuongHuong);
                    const doiTuongHuong = {
                        'CO_CONG_CACH_MANG': 'Là con của người có công với cách mạng được hưởng ưu đãi',
                        'SV_VAN_BANG_1': 'Là sinh viên học đại học văn bằng thứ nhất từ 16 tuổi đến 22 tuổi thuộc một trong các trường hợp quy định tại Khoản 1 Điều 5 Nghị định số 136/2013/NĐ - CP ngày 21/10/2013 của Chính phủ quy định chính sách trợ giúp xã hội',
                        'TAN_TAT_KHO_KHAN_KINH_TE': 'Bản thân bị khuyết tật, tàn tật có khó khăn về kinh tế',
                        'DAN_TOC_HO_NGHEO': 'Bản thân là người dân tộc thiểu số thuộc hộ nghèo, hộ cận nghèo',
                        'DAN_TOC_IT_NGUOI_VUNG_KHO_KHAN': 'Bản thân là người dân tộc thiểu số rất ít người và ở vùng có điều kiện kinh tế - xã hội khó khăn hoặc đặc biệt khó khăn',
                        'DAN_TOC_VUNG_KHO_KHAN': 'Bản thân là người dân tộc thiểu số và ở vùng có điều kiện kinh tế - xã hội đặc biệt khó khăn',
                        'CHA_ME_TAI_NAN_DUOC_TRO_CAP': 'Là con của cán bộ, công nhân, viên chức mà cha hoặc mẹ bị tai nạn lao động hoặc mắc bệnh nghề nghiệp được hưởng trợ cấp thường xuyên'
                    };
                    result += `<div>${doiTuongHuong[dichVu.doiTuongHuong]}</div>`;
                    break;
                case dichVuEnum.DE_NGHI_HO_TRO_CHI_PHI:
                    const doiTuongDeNghi = {
                        'DAN_TOC_HO_NGHEO': 'Bản thân là người dân tộc thiểu số thuộc hộ nghèo',
                        'DAN_TOC_HO_CAN_NGHEO': 'Bản thân là người dân tộc thiểu số thuộc hộ cận nghèo'
                    };
                    result += `<div>${doiTuongDeNghi[dichVu.doiTuongHuong]}</div>`;
                    break;
                default:
                    break;
            }
            return result;
        }

        var template = function(data) {
            const dichVu = data.DichVu;
            console.log('dich vu:', dichVu);
            const student = data.Student;

            const studentName = dichVu.studentName;
            const studentCode = dichVu.studentCode;
            const statusCode = Number(dichVu.status);
            const statusName = statusDictionary[statusCode];



            const avaPath = `api/student/avatar/${studentCode}?width=64&height=64`;
            const studentAva = `@ConfigurationManager.AppSettings.Get("API_URL")/${avaPath}`;
            const avaId = `ava-${dichVu.id}`;
            let customizeBtnsTemplate = '';

            let ngayHenFrom = new Date();
            let ngayHenTo = new Date();

            if (dichVu.ngayHenTuNgay) {
                ngayHenFrom = new Date(dichVu.ngayHenTuNgay);
            }
            if (dichVu.ngayHenDenNgay) {
                ngayHenTo = new Date(dichVu.ngayHenDenNgay);
            }

            const statusTextClass = templateStatus[statusCode];

            const mainContentSection = getMainContentSection(dichVu);

            let noteSection = '';
            if ([9, 10, 11, 12].includes(serviceType)) { //dịch vụ là đăng ký chỗ ở, xin miễn học phí, đề nghị hỗ trợ chi phí thì k cần show
                noteSection = '';
            } else if ([4, 6].includes(statusCode)) {
                noteSection += `<div class="fw-700 mb-3 mt-3" style="color:blue;">
                              * Ngày hẹn: Từ <b>${ngayHenFrom.getHours()}</b> giờ - <b>${ngayHenFrom.getMinutes()}</b> phút - Ngày <b>${convertDateTime(dichVu.ngayHenTuNgay)}</b></br>
                                Đến <b>${ngayHenTo.getHours()}</b> giờ - <b>${ngayHenTo.getMinutes()}</b> phút - Ngày <b>${convertDateTime(dichVu.ngayHenDenNgay)}</b></div>`;
            } else if (statusCode === 5) {
                noteSection += `<div class="fw-700 mb-3 mt-3" style="color:red;">- Phản hồi: ${dichVu.phanHoi || ''}</div>`;
            }

            if (serviceType === dichVuEnum.MUON_HOC_BA_GOC && statusCode === 4) {
                customizeBtnsTemplate = `<div
                          class="info-badge text-light text-center cursor-pointer ml-2"
                          data-toggle="modal"
                          data-target="#myModalUpdateMuonHocBa"
                          onclick="onRowClick(${dichVu.id})"
                        >
                          Cập nhật thông tin
                        </div>`;
            }

            return `
                <div class="row font-13-sm align-items-center display-lg">
                    <div class="col-1 mr-3">
                      <img
                        id="${avaId}"
                        src="${studentAva}"
                        alt=""
                        class="list-item-avatar"
                      />
                    </div>
                    <div class="col-10">
                      <div class="row align-items-center">
                        <div
                          class="text-uppercase main-color fw-600 font-14-sm mr-4"
                        >
                          ${studentName}
                        </div>
                        <div
                          class="status-badge text-light text-center cursor-pointer"
                          data-toggle="modal"
                          data-target="#update-status-modal"
                          onclick="fillData(${dichVu.id})"
                        >
                          Chuyển trạng thái
                        </div>
                        ${customizeBtnsTemplate}
                      </div>
                      <div class="row mt-2">
                        <div>
                          Mã sinh viên: ${studentCode} <span class="ml-2 mr-2">|</span>
                        </div>
                        <div>
                            Trạng thái:
                            <span class="${statusTextClass}" style="font-weight: bold">
                                ${statusName}
                            </span>
                        </div>
                      </div>
                    </div>
                  </div>

                  <!-- Display mobile -->
                  <div
                    class="row font-13-sm align-items-center mb-3 display-mobile"
                  >
                    <div class="col-2">
                      <img
                        id="${avaId}"
                        src="${studentAva}"
                        alt=""
                        class="list-item-avatar"
                      />
                    </div>
                    <div class="col-5">
                      <div class="text-uppercase main-color fw-600 font-14-sm">
                        ${studentName}
                      </div>
                      <div
                        class="status-badge text-light text-center cursor-pointer"
                        data-toggle="modal"
                        data-target="#update-status-modal"
                        onclick="fillData(${dichVu.id})"
                      >
                        Chuyển trạng thái
                      </div>
                        ${customizeBtnsTemplate}
                    </div>
                    <div class="col-12 mt-2">
                      <div>Mã sinh viên: ${studentCode}</div>
                      <div>
                        Trạng thái:
                        <span class="${statusTextClass}" style="font-weight: bold">
                            ${statusName}
                        </span>
                      </div>
                    </div>
                  </div>
                        <div class="col-12 font-13-sm">
                  <div class="text-uppercase main-color fw-700 mb-0 mt-3">
                    nội dung
                  </div>
                  ${mainContentSection}
                  ${noteSection}
                  <div class="row ml-0 mr-0 align-items-center">
                    ${serviceType != 9 ?
                       `<a
                            class="print-btn col-3 text-light font-14-sm text-decoration-none cursor-pointer col-md-1"
                            onclick="onExportWord(${dichVu.id})"
                        >
                            <div class="row justify-content-center">
                                <img
                                    src="/content/images/icons/upload-white.png"
                                    alt=""
                                    class="mr-2 upload-white-icon"
                                />
                                <div>IN</div>
                            </div>
                        </a>` : ''
                    }
                    <div class="col-9 col-md-11 text-right">
                      Thời gian gửi yêu cầu:
                      <span class="main-color">${convertDateTime(dichVu.createdTime)}</span>
                    </div>
                  </div>
                </div>`;
        };

        var userTable = $('#qldv-detail-datatable').DataTable({
            processing: true,
            serverSide: true,
            ordering: false,
            lengthChange: false,
            stateSave: true,
            deferLoading: 0,
            language: dataTableConfig.language,
            ajax: {
                url: 'SearchServiceRequest',
                dataType: 'json',
                contentType: 'application/json',
                type: 'POST',
                data: function (d) {
                    return JSON.stringify(d);
                },
                dataSrc: function(json) {
                    dataList = json.data;
                    selectedIndex = [];
                    $(`#select-all`).prop({checked: false, indeterminate: false});

                    return json.data;
                }
            },
            drawCallback: function() {
                replaceFailedAvatar();
            },
            headerCallback: function( thead, data, start, end, display ) {
                $(thead).find('th').eq(0).html(`<input type="checkbox" class="checkbox-select"
                                                        id="select-all" onclick="onSelectAll()" />`);
                $(thead).find('th').eq(0).prop({style: 'width: 4%'});
            },
            columns: [
                {
                    data: null,
                    mRender: function(data, type, row, meta) {
                        const i = meta.row;
                        return `<input type="checkbox" id="${i}-select"
                                    class="checkbox-select"
                                    onclick="updateselectedDataIndex(${i}, 'select')">`;
                    },
                },
                {
                    data: null,
                    mRender: function (data, type, row) {
                        return template(data);
                    }
                },
            ]
        });

        var onClickChangeMultiStatus = function() {
            if (selectedDataIsValid()) {
                isUpdateStatusMulti = true;
                $('#divConfirm').html('Bạn có muốn chuyển tất cả các yêu cầu được chọn sang trạng thái ĐÃ XỬ LÝ VÀ CÓ LỊCH HẸN không?');
                const status = generateStatusOptions(5);
                onChangeStatus({ value: status });
                $('#update-status-modal').modal();
            }
        }

        var onChangeStatus = function(event) {
            showThongBaoOnStatusForm('');
            const selectedStatus = Number(event.value);
            if (!selectedStatus) return;
            switch (selectedStatus) {
                case 2:
                case 3:
                    $('#divPhanHoi').hide();
                    $('#blockNgayHen').hide();
                    break;
                case 4:
                    $('#divPhanHoi').hide();
                    $('#blockNgayHen').show();
                    break;
                case 5:
                    $('#divPhanHoi').show();
                    $('#PhanHoi').val('');
                    $('#blockNgayHen').hide();
                    break;
                case 6:
                    $('#divPhanHoi').hide();
                    $('#PhanHoi').val('');
                    $('#blockNgayHen').hide();
                default:
                    break;
            }
            $('#cbNgayHen').prop({ checked: false });
            onChangeOptionUpdateNgayHen({ checked: false });
        }

        var onChangeOptionUpdateNgayHen = function(event) {
            const checked = event.checked;
            if (checked) {
                $('#divNgayHen').show();
                return;
            }
            $('#divNgayHen').hide();
        }

        var onChangeDateRange = function(event) {
          searchData();
        }

        var searchData = function () {
            let dayRange = 7;
            if ($('#slChonNgay').val() === "null") {
                dayRange = null;
            } else if ($('#slChonNgay').val()) {
                dayRange = $('#slChonNgay').val();
            }
            const data = {
                type: serviceType,
                searchText: $("#txt-srvc-search").val() || '',
                dayRange,
                page: null,
                size: null,
            };
            var jsonData = JSON.stringify(data);
            userTable.page.len(50).search(jsonData).draw();
        }

        var onExportWord = function(id) {
            callApiExport({
                DichVuList: [{
                    ID: id
                }],
                ExportType: 'word',
                DichVuType: serviceType
            }, 'docx');
        };

        var onExportWordList = function() {
            const data = getDataToExportMultiYeuCau();
            if (data.length < 1 ) {
                return;
            }
            callApiExport({
                DichVuList: data,
                ExportType: 'word-list',
                DichVuType: serviceType
            }, 'zip');
        };


        var onExportExcel = function() {
            const data = getDataToExportMultiYeuCau();
            if (data.length < 1 ) {
                return;
            }
            callApiExport({
                DichVuList: data,
                ExportType: 'excel',
                DichVuType: serviceType
            }, 'xlsx');
        }

        var danhSachDotDangKy = function () {
            if (serviceType == 9) {
                window.location = `/CtsvServiceManagement/DotDangKyChoO`;
            }
            else if (serviceType == 10) {
                window.location = `/CtsvServiceManagement/DotXinMienGiamHocPhi`;
            }
            else if (serviceType == 11) {
                window.location = `/CtsvServiceManagement/DotDeNghiHoTroChiPhi`;
            } else if (serviceType == 12) {
                window.location = `/CtsvServiceManagement/DotHoTroHocTap`;
            }
        }

        //mặc định tin tất trong đợt đăng ký mới nhất
        var onExportExcelDotDangKy = function () {
            callApiExport({
                DichVuList: [],
                ExportType: 'excel',
                DichVuType: serviceType
            }, 'xlsx');
        }

        var getDataToExportMultiYeuCau = function() {
            if (!selectedDataIsValid()) {
                return;
            }
            const selectedData = [];

            dataList.forEach((item, index) => {
                if (selectedIndex.includes(index)) {
                    selectedData.push({
                        ID: item.DichVu.id,
                    });
                }
            });
            return selectedData;
        }

        var selectedDataIsValid = function(){
            if (selectedIndex.length < 1) {
                $("#h_noidung_thongbao").html("Không có yêu cầu dịch vụ nào được chọn");
                $('#myModalThongBao').modal();
                return false;
            }
            return true;
        }

        var showThongBaoOnStatusForm = function(msg) {
            $('#divWarning').html(msg || '');
        }

        var getNgayHen = function(status = 0, auto = true) {
            var result = {
                ok: true,
                strNgayBatDau: "01/01/1990 00:00",
                strNgayKetThuc: "01/01/1990 00:00",
            }
            if (status === 4 && !auto) {
                if (($("#txtNgayBatDau").val() == "" || $("#txtNgayKetThuc").val() == "")) {
                    showThongBaoOnStatusForm("Bạn hãy chọn thời gian hẹn");
                    result.ok = false;
                    return result;
                }
                else {
                    if (convertNumberFromText($("#txtNgayBatDau").val()) >= convertNumberFromText($("#txtNgayKetThuc").val())) {
                        showThongBaoOnStatusForm('Bạn hãy chọn ngày hẹn KẾT THÚC lớn hơn ngày hẹn BẮT ĐẦU');
                        result.ok = false;
                        return result;
                    }
                }
                if ($("#txtGioBatDau").val() === "" || $("#txtGioBatDau").val() === null) {
                    $("#txtGioBatDau").val("00");
                }
                else {
                    var hh = parseInt($("#txtGioBatDau").val());
                    if (isNaN(hh))
                        hh = 0;
                    if (hh < 0 || hh > 24)
                        $("#txtGioBatDau").val("00");
                    else if (hh < 10)
                        $("#txtGioBatDau").val("0" + hh);
                }

                if ($("#txtPhutBatDau").val() === '' || $("#txtPhutBatDau").val() === null) {
                    $("#txtPhutBatDau").val("00");
                }
                else {
                    var mm = parseInt($("#txtPhutBatDau").val());
                    if (isNaN(mm))
                        mm = 0;
                    if (mm < 0 || mm > 60)
                        $("#txtPhutBatDau").val("00");
                    else if (mm < 10)
                        $("#txtPhutBatDau").val("0" + mm);
                }
                if ($("#txtGioKetThuc").val() === "" || $("#txtGioKetThuc").val() === null) {
                    $("#txtGioKetThuc").val("00");
                }
                else {
                    var hh = parseInt($("#txtGioKetThuc").val());
                    if (isNaN(hh))
                        hh = 0;
                    if (hh < 0 || hh > 24)
                        $("#txtGioKetThuc").val("00");
                    else if (hh < 10)
                        $("#txtGioKetThuc").val("0" + hh);
                }
                if ($("#txtPhutKetThuc").val() === "" || $("#txtPhutKetThuc").val() === null) {
                    $("#txtPhutKetThuc").val("00");
                }
                else {
                    var mm = parseInt($("#txtPhutKetThuc").val());
                    if (isNaN(mm))
                        mm = 0;
                    if (mm < 0 || mm > 60)
                        $("#txtPhutKetThuc").val("00");
                    else if (mm < 10)
                        $("#txtPhutKetThuc").val("0" + mm);
                }
            }

            if ($("#txtNgayBatDau").val() != "") {
                const tmpNgayBatDau = $("#txtNgayBatDau").val().split('/').reverse().join('/');
                result.strNgayBatDau = tmpNgayBatDau + " " + $("#txtGioBatDau").val() + ":" + $("#txtPhutBatDau").val();
            }
            if ($("#txtNgayKetThuc").val() != "") {
                const tmpNgayKetThuc = $("#txtNgayKetThuc").val().split('/').reverse().join('/');
                result.strNgayKetThuc = tmpNgayKetThuc + " " + $("#txtGioKetThuc").val() + ":" + $("#txtPhutKetThuc").val();
            }
            return result;
        };

        var getNgayTraDuKien = function (idNgayTraDuKien = 'txtNgayTra', idGioTraDuKien = '', idPhutTraDuKien = '') {
            var result = {
                ok: true,
                strNgayTraDuKien: "01/01/1990 00:00",
            }
            if ($(`#${idNgayTraDuKien}`).val() === '') {
                showThongBaoOnStatusForm("Bạn hãy chọn thời gian trả dự kiến");
                result.ok = false;
                return result;
            }
            if ($(`#${idGioTraDuKien}`).val() === "" || $(`#${idGioTraDuKien}`).val() === null) {
                $(`#${idGioTraDuKien}`).val("00");
            }
            else {
                var hh = parseInt($(`#${idGioTraDuKien}`).val());
                if (isNaN(hh))
                    hh = 0;
                if (hh < 0 || hh > 24)
                    $(`#${idGioTraDuKien}`).val("00");
                else if (hh < 10)
                    $(`#${idGioTraDuKien}`).val("0" + hh);
            }

            if ($(`#${idPhutTraDuKien}`).val() === '' || $(`#${idPhutTraDuKien}`).val() === null) {
                $(`#${idPhutTraDuKien}`).val("00");
            }
            else {
                var mm = parseInt($(`#${idPhutTraDuKien}`).val());
                if (isNaN(mm))
                    mm = 0;
                if (mm < 0 || mm > 60)
                    $(`#${idPhutTraDuKien}`).val("00");
                else if (mm < 10)
                    $(`#${idPhutTraDuKien}`).val("0" + mm);
            }

            if ($(`#${idNgayTraDuKien}`).val() != "") {
                const tmpNgayBatDau = $(`#${idNgayTraDuKien}`).val().split('/').reverse().join('/');
                result.strNgayTraDuKien = tmpNgayBatDau + " " + $(`#${idGioTraDuKien}`).val() + ":" + $(`#${idPhutTraDuKien}`).val();
            }
            return result;
        };

        var onUpdatePartialMuonHocBa = function (event) {
            var rs = getNgayTraDuKien('txtMuonHocBaNgayTra', 'txtMuonHocBaGioTra', 'txtMuonHocBaPhutTra');
            if (!rs.ok) return;
            var body = {
                Id: selectedYeuCau.DichVu.id,
                NgayMuonThucTe: null,
                NgayTraDuKien: rs.strNgayTraDuKien,
                Notice: $(`#txtMuonHocBaGhiChu`).val(),
                Description: $(`#txtMuonHocBaMoTa`).val(),
            };

            try {
                callApiUpdateParitalMuonHocBa(body);
                $('#myModalUpdateMuonHocBa').modal('hide');
            } catch (error) {

            }
        }

        var onUpdateStatus = function(event) {
            if (isUpdateStatusMulti) {
                onUpdateMultiStatus(event);
                return;
            }
            onUpdateSingleStatus(event);
        }

        var onUpdateMultiStatus = function(event) {
            const data = getDataToExportMultiYeuCau();
            if (data.length < 1) {
                return;
            }

            var body = {
                Type: serviceType,
                RequestId: 0,
                PhanHoi: '',
                NgayHenBatDau: '',
                NgayHenKetThuc: '',
                AutoUpdateNgayHen: true,
                DichVuList: data,
                Status: $('#slUpdateStatus').val(),
            };

            try {
                handleUpdateStatusData(body);
                callApiUpdateMultiStatus(body);
                $('#update-status-modal').modal('hide');
            } catch (error) {

            }
        };

        var onUpdateSingleStatus = function(event) {
            if (!selectedYeuCau || !selectedYeuCau.DichVu.id) return;

            var data = {
                Type: serviceType,
                RequestId: selectedYeuCau.DichVu.id,
                PhanHoi: '',
                NgayHenBatDau: '',
                NgayHenKetThuc: '',
                AutoUpdateNgayHen: true,
                Status: $('#slUpdateStatus').val(),
            };

            try {
                handleUpdateStatusData(data);
                callApiUpdateStatus(data);
                $('#update-status-modal').modal('hide');
            } catch (error) {

            }
        };

        var handleUpdateStatusData = function(data) {
            if (data.Status * 1 === 4) {
                var autoNgayHen = !$('#cbNgayHen').is(':checked');
                var rsNgayHen = getNgayHen(data.Status * 1, autoNgayHen);

                if (!rsNgayHen.ok) {
                    throw 'ngày hẹn không hợp lệ';
                }
                data.AutoUpdateNgayHen = autoNgayHen;
                data.NgayHenBatDau = rsNgayHen.strNgayBatDau;
                data.NgayHenKetThuc = rsNgayHen.strNgayKetThuc;
            } else if (data.Status * 1 === 5) {
                data.PhanHoi = $('#PhanHoi').val();
            }
        }

        var callApiUpdateParitalMuonHocBa = function (data) {
            $('#loading-screen').show();
            $.ajax({
                type: 'POST',
                url: `@Url.Action("UpdatePartialMuonHocBa", "CtsvServiceManagement")`,
                data: JSON.stringify(data),
                dataType: 'json',
                contentType: 'application/json',
            }).done(res => {
                $('#loading-screen').hide();
                if (res.StatusCode === 200) {
                    $("#h_noidung_thongbao").html("Cập nhật thành công");
                    $('#myModalThongBao').modal();
                    searchData();
                } else {
                    $("#h_noidung_thongbao").html(res.Message);
                    $('#myModalThongBao').modal();
                }
            }).fail(err => {
                $('#loading-screen').hide();
                $("#h_noidung_thongbao").html("Lỗi hệ thống");
                $('#myModalThongBao').modal();
            });
        }

        var callApiUpdateStatus = function(data) {
            $('#loading-screen').show();
            $.ajax({
                type: 'POST',
                url: `@Url.Action("UpdateStatus", "CtsvServiceManagement")`,
                data: JSON.stringify(data),
                dataType: 'json',
                contentType: 'application/json',
            }).done(res => {
                $('#loading-screen').hide();
                if (res.StatusCode === 200) {
                    $("#h_noidung_thongbao").html("Cập nhật thành công");
                    $('#myModalThongBao').modal();
                    searchData();
                } else {
                    $("#h_noidung_thongbao").html(res.Message);
                    $('#myModalThongBao').modal();
                }
            }).fail(err => {
                $('#loading-screen').hide();
                $("#h_noidung_thongbao").html("Lỗi hệ thống");
                $('#myModalThongBao').modal();
            });
        }

        var callApiUpdateMultiStatus = function(data) {
            $('#loading-screen').show();
            $.ajax({
                type: 'POST',
                url: `@Url.Action("UpdateMultiStatus", "CtsvServiceManagement")`,
                data: JSON.stringify(data),
                dataType: 'json',
                contentType: 'application/json',
            }).done(res => {
                $('#loading-screen').hide();
                if (res.StatusCode === 200) {
                    $("#h_noidung_thongbao").html("Cập nhật thành công");
                    $('#myModalThongBao').modal();
                    searchData();
                } else {
                    $("#h_noidung_thongbao").html(res.Message);
                    $('#myModalThongBao').modal();
                }
            }).fail(err => {
                $('#loading-screen').hide();
                $("#h_noidung_thongbao").html("Lỗi hệ thống");
                $('#myModalThongBao').modal();
            });
        }

        var callApiExport = function(data, format) {
            $.ajax({
                type: 'POST',
                url: `@Url.Action("ExportFile", "CtsvServiceManagement")`,
                data: JSON.stringify(data),
                dataType: 'json',
                contentType: 'application/json',
                success: function(res) {
                    window.location = `/CtsvServiceManagement/DownloadFile?id=${res.fileId}&format=${format}`;
                },
            }).done(res => {
            }).fail(res => {
            });
        }

        var init = function() {
            isUpdateStatusMulti = false;
            $('#divTitle').html(serviceDictionary[serviceType].name);
            $('#qldv-detail-datatable_filter').hide();
            $("#txt-srvc-search").keyup((event) => {
                if (event.keyCode === 13){
                    searchData();
                }
            });
            searchData();
            initDatepicker();
        }

        init();
    </script>
}


