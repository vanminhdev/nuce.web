@model nuce.web.quanly.Areas.Admin.Models.UserDetail
@{
    ViewBag.Title = "Thông tin tài khoản";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

@section Style {
    <link rel="stylesheet" href="~/content/css/bootstrap-select.min.css" />
    <style>
        .custom-boostrap-select button {
            background: none;
            border-color: #ced4da;
        }
    </style>
}

<form method="post" class="container-fluid service-categories-wrp mt-2">
    <a class="update-btn text-light p-2" style="text-decoration: none;" href="/admin/usermanager/index">← Quay lại danh sách</a>

    <div class="fw-700 text-uppercase font-15-sm font-25 mb-2 mt-3">
        cập nhật thông tin tài khoản
    </div>

    <div class="fw-600 text-uppercase font-14-sm font-18 mb-2 main-color">
        Cài đặt tài khoản
    </div>

    @if (ViewData["UpdateSuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            @ViewData["UpdateSuccessMessage"]
            <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
        </div>
    }

    @if (ViewData["UpdateErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            @ViewData["UpdateErrorMessage"]
            <hr>
            <p class="mb-0">@ViewData["UpdateErrorMessageDetail"]</p>
            <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
        </div>
    }

    <div class="row font-13-sm font-16">
        @Html.TextBoxFor(m => m.UserUpdateBind.id, new { @type = "hidden" })
        <span class="form-text text-danger" asp-validation-for="UserUpdateBind.id"></span>
        @Html.TextBoxFor(m => m.UserUpdateBind.username, new { @type = "hidden" })
        @Html.TextBoxFor(m => m.UserUpdateBind.status, new { @type = "hidden" })
        <div class="col-12 form-group">
            <div class="row">
                <div class="col-6 col-md-3">
                    <div class="font-14-sm font-weight-bold mb-2">
                        Ảnh đại diện <span class="sub-color">*</span>
                    </div>
                    <div class="custom-file">
                        <input id="input-file"
                               type="file"
                               class="custom-file-input" />
                        <label for="input-file"
                               class="custom-file-label text-truncate text-center">
                            <img src="~/content/images/icons/upload.png"
                                 alt="upload-icon"
                                 class="mr-1" />
                            Chọn file
                        </label>
                    </div>
                </div>
                <div class="col-6 col-md-3">
                    <img src="~/content/images/person1.png"
                         alt=""
                         class="upload-user-avatar" />
                </div>
            </div>
        </div>
        <div class="col-12 form-group">
            <div class="row mr-0 ml-0 align-items-center">
                <div class="font-14-sm fw-600 col-12 col-md-2 pr-0 pl-0">
                    Tên tài khoản
                </div>
                <div class="col-12 col-md-10">@(Model.UserUpdateBind.username)</div>
            </div>
        </div>
        <div class="col-12 form-group">
            <div class="row mr-0 ml-0">
                <div class="font-14-sm fw-600 col-12 pr-0 pl-0 col-md-2">
                    Địa chỉ email
                </div>
                <div class="col-12 col-md-10">
                    @Html.TextBoxFor(m => m.UserUpdateBind.email, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.UserUpdateBind.email, "", new { @class = "form-text text-danger" })
                </div>
            </div>
        </div>
        <div class="col-12 form-group">
            <div class="row mr-0 ml-0">
                <div class="font-14-sm fw-600 col-12 pr-0 pl-0 col-md-2">
                    SĐT
                </div>
                <div class=" col-12 col-md-10">
                    @Html.TextBoxFor(m => m.UserUpdateBind.phoneNumber, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.UserUpdateBind.phoneNumber, "", new { @class = "form-text text-danger" })
                </div>
            </div>
        </div>
        <div class="col-12 form-group">
            <div class="row mr-0 ml-0">
                <div class="font-14-sm fw-600 col-12 pr-0 pl-0 col-md-2">
                    Trạng thái
                </div>
                <div class="col-12 col-md-10">
                    <div class="">
                        @switch (Model.UserUpdateBind.status)
                        {
                            case 1:
                                <span class="badge badge-pill badge-success p-2 pl-3 pr-3 font-14">Mở khoá</span>
                                break;
                            case 2:
                                <span class="badge badge-pill badge-secondary p-2 pl-3 pr-3 font-14">Bị khoá</span>
                                break;
                        }
                    </div>
                </div>
            </div>
        </div>
        <div class="col-12 form-group">
            <div class="row mr-0 ml-0">
                <div class="font-14-sm fw-600 col-12 pr-0 pl-0 col-md-2">
                    Vai trò <span class="text-danger">*</span>
                </div>
                <div class="col-12 col-md-10">
                    @Html.DropDownListFor(m => m.UserUpdateBind.roles, new SelectList(nuce.web.quanly.Common.Definitions.Roles, "Key", "Value"), new { id = "select-roles", @class = "selectpicker form-control custom-boostrap-select", @multiple = true, title = "Chọn vài trò" })
                    @Html.ValidationMessageFor(m => m.UserUpdateBind.roles, "", new { @class = "form-text text-danger" })
                </div>
            </div>
        </div>
        <div class="col-12 form-group d-flex justify-content-center">
            <div class="col-12 col-md-3">
                <button type="submit" formaction="/admin/UserManager/UpdateUser" class="update-btn text-light w-100 text-uppercase font-14-sm pt-2 pb-2 mt-2">
                    cập nhật
                </button>
            </div>
        </div>
    </div>

    <div class="fw-600 text-uppercase font-14-sm font-18 mb-2 main-color">
        Khôi phục mật khẩu
    </div>
    <div class="font-13-sm font-16 font-italic mb-3">
        Dùng trong trường hợp người sử dụng tài khoản không nhớ mật khẩu
    </div>

    @if (ViewData["ResetPasswordSuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            @ViewData["ResetPasswordSuccessMessage"]
            <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
        </div>
    }

    @if (ViewData["ResetPasswordErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            @ViewData["ResetPasswordErrorMessage"]
            <hr>
            <p class="mb-0">@ViewData["ResetPasswordErrorMessageDetail"]</p>
            <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
        </div>
    }

    <div class="row justify-content-end font-16">
        <div class="col-12 form-group">
            <div class="row mr-0 ml-0">
                <div class="font-14-sm fw-600 col-12 pr-0 pl-0 col-md-2">
                    Mật khẩu mới:
                </div>
                <div class="col-12 col-md-10">
                    @Html.PasswordFor(m => m.ResetPassword.newPassword, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.ResetPassword.newPassword, "", new { @class = "form-text text-danger" })
                </div>
            </div>
        </div>
        <div class="col-12 form-group">
            <div class="row mr-0 ml-0">
                <div class="font-14-sm fw-600 col-12 pr-0 pl-0 col-md-2">
                    Xác nhận mật khẩu:
                </div>
                <div class="col-12 col-md-10">
                    @Html.PasswordFor(m => m.ResetPassword.confirmPassword, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.ResetPassword.confirmPassword, "", new { @class = "form-text text-danger" })
                </div>
            </div>
        </div>
        <div class="col-12 form-group d-flex justify-content-center">
            <div class="col-12 col-md-3">
                <button formaction="/admin/usermanager/resetpassword" class="update-btn text-light w-100 text-uppercase font-14-sm pt-2 pb-2 mt-2" type="submit">
                    cập nhật
                </button>
            </div>
        </div>
    </div>

    <div class="fw-600 text-uppercase font-14-sm font-18 mb-2 main-color">
        Thay đổi trạng thái tài khoản
    </div>
    <div class="font-13-sm font-16 font-italic mb-3">
        Lưu ý với trường hợp xoá tài khoản, tài khoản bị xoá sẽ không thể khôi phục
    </div>
    <div class="row justify-content-end font-16">
        <div class="col-12 form-group d-flex justify-content-center">
            @if (Model.UserUpdateBind.status == (int)nuce.web.quanly.Common.UserStatus.Deactive)
            {
                <div class="col-12 col-md-3">
                    <button type="button" id="btn-unlock-user" class="btn btn-success text-light w-100 text-uppercase font-14-sm pt-2 pb-2 mt-2">
                        mở khoá tài khoản
                    </button>
                </div>
            }
            else if (Model.UserUpdateBind.status == (int)nuce.web.quanly.Common.UserStatus.Active)
            {
                <div class="col-12 col-md-3">
                    <button type="button" id="btn-lock-user" class="btn btn-warning text-light w-100 text-uppercase font-14-sm pt-2 pb-2 mt-2"
                            data-toggle="modal">
                        khoá tài khoản
                    </button>
                </div>
            }
            <div class="col-12 col-md-3">
                <button type="button" id="btn-delete-user" class="btn btn-danger text-light w-100 text-uppercase font-14-sm pt-2 pb-2 mt-2">
                    xoá tài khoản
                </button>
            </div>
        </div>
    </div>

    <div class="modal fade" id="modal-yes-no" tabindex="-1" role="dialog" aria-labelledby="modal-yes-no" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="modal-yes-no-title">Khoá tài khoản</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body" id="modal-yes-no-content">
                    Xác nhận khoá tài khoản?
                </div>
                @Html.TextBoxFor(m => m.ChangeStatus, new { id = "action-user-status", type = "hidden", value = "unlock-user" })
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Không</button>
                    <button type="submit" formaction="/admin/usermanager/changestatus" class="btn btn-primary">Có</button>
                </div>
            </div>
        </div>
    </div>
</form>



@section Scripts {
    <script src="~/content/js/bootstrap-select.min.js"></script>
    <script>
        $('#select-roles').selectpicker('val', @(Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.UserUpdateBind.roles))));
        $('#btn-unlock-user').click(() => handlerUserStatus("unlock-user"));
        $('#btn-lock-user').click(() => handlerUserStatus("lock-user"));
        $('#btn-delete-user').click(() => handlerUserStatus("delete-user"));
        function handlerUserStatus(action) {
            let yesNoTitle = $('#modal-yes-no-title');
            let yesNoContent = $('#modal-yes-no-content');
            if (action === "unlock-user") {
                yesNoTitle.html('Mở khoá tài khoản');
                yesNoContent.html('Xác nhận mở khoá tài khoản ?');
            }
            else if (action === "lock-user") {
                yesNoTitle.html('Khoá tài khoản');
                yesNoContent.html('Xác nhận khoá tài khoản ?');
            }
            else if (action === "delete-user") {
                yesNoTitle.html('Xoá tài khoản');
                yesNoContent.html('Xác nhận xoá tài khoản ? (Lưu ý: tài khoản bị xoá sẽ không thể khôi phục)');
            }
            $('#action-user-status').val(action);
            $('#modal-yes-no').modal('show');
        }
    </script>
}

