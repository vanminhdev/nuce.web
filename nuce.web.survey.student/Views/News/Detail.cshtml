@using nuce.web.survey.student.Models;
@using System.Configuration;

@{
    ViewBag.Title = "Detail";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section Breadcrumb {
    <li class="breadcrumb-item"><a class="m-text-blue" href="/default">Trang chủ</a></li>
    <li class="breadcrumb-item"><a id="breadcrum-category" class="m-text-blue" href="/news?catId=@TempData.Peek("catId")"></a></li>
}

<div class="row">
    <div class="col-md-8 col-12">
        <p id="news-item-title" class="font-weight-bold text-justify m-fs-16"></p>
        <div>
            <p id="news-item-date" class="m-date-article m-fs-13 text-right"></p>
        </div>
        <div id="news-item-content" class="mt-4">

        </div>
        <div id="other-news-container" class="mt-2">
            <a class="mb-2"
               style="display: block; text-decoration: none">
                <div class="m-border-b-blue d-flex">
                    <span class="m-bg-blue m-text-white p-1 pl-2 pr-2 text-uppercase">
                        <i class="fas fa-cogs mr-2"></i>
                        Các bài liên quan
                    </span>
                </div>
            </a>
            <div id="other-news" class="pt-1">

            </div>
        </div>
    </div>
    <div class="col-md-4 col-12">
        @Html.Partial("~/Views/News/Partials/_PartialGroupNews.cshtml")
    </div>
</div>

@section Scripts{
    <script src="~/Content/js/helper/datetime.js"></script>
    <script src="~/Content/js/helper/enum.js"></script>
    <script>
        var state = {
            id: @TempData.Peek("itemId") || '',
            data: {},
            sideContentId: 6,
        };

        var generateCategoryNameBreadcrumb = function() {
            const localCategoryData = localStorage.getItem(STORAGE_KEY.CATEGORY_LIST);
            if (localCategoryData != null) {
                var data = JSON.parse(localCategoryData);
                const thisCat = data.find(c => c.id === state.data.catId);
                if (typeof thisCat !== 'undefined') {
                    $('#breadcrum-category').html(thisCat.description || '');
                    $('#breadcrum-category').prop({href: `/news?catId=${state.data.catId}` });
                }
            }
        };

        var getNewsItemDetail = function() {
            $.ajax({
                type: 'get',
                url: `${API_URL}/api/NewsManager/news-items/${state.id}`,
                dataType: 'json',
                contentType: 'application/json',
                success: function(res) {
                    if (res != null && typeof res !== 'undefined') {
                        state.data = res;
                        $('#news-item-title').html(res.title);
                        $('#news-item-content').html(res.newContent);
                        $('#news-item-date').html(datetimeHelper.convertDateTime(new Date(res.entryDatetime)));
                        //handleContentImage();
                        generateCategoryNameBreadcrumb();
                    }
                },
            });
        };

        var getSurroundItems = function() {
            $.ajax({
                type: 'get',
                url: `${API_URL}/api/NewsManager/news-items/${state.id}/surround`,
                dataType: 'json',
                contentType: 'application/json',
                success: function(res) {
                    if (res != null && Array.isArray(res)) {
                        handleSurroundItems(res);
                    }
                },
            });
        };

        var handleSurroundItems = function(data = []) {
            console.log(data);
            let strHtml = '';
            data.forEach((item, idx) => {
                const entryDate = datetimeHelper.convertDateTime(new Date(item.entryDatetime));
                let borderTop = '';
                if (idx > 0) {
                    borderTop += `border-top`;
                }
                strHtml += `<div class="m-hover-news-item-anchor-inside ${borderTop} row py-1">
                                <div class="col-3">
                                    <img src="${API_URL}/api/NewsManager/news-items/avatar/${item.id}" 
                                            style="max-width: 100%; height: auto;">
                                </div>

                                <div class="col-9">
                                    <a style="display: block; text-decoration: none"
                                        class="text-dark p-1"
                                        href="/news/detail?catId=${item.catId}&itemId=${item.id}">
                                        <h6 class="title">${item.title}</h6>
                                        <p class="m-date-article m-fs-13">${entryDate || ''}</p>
                                    </a>
                                </div>
                            </div>`;
            });
            $('#other-news').html(strHtml);
        };

        var handleContentImage = function() {
            $('#news-item-content img').each((idx, el) => {
                el.style.width = '100%';
            });
        };

        var init = function() {
            getNewsItemDetail();
            getSurroundItems();
        }

        init();

    </script>
    <script>
        @{
            var partialGroupNewsModel = new PartialGroupNewsModel()
            {
                showAnnoucement = true,
                showNewsEvent = true
            };
            if (((int)TempData.Peek("catId")).Equals(Convert.ToInt32(@ConfigurationManager.AppSettings.Get("THONGBAO_ID"))))
            {
                partialGroupNewsModel.showNewsEvent = true;
                partialGroupNewsModel.showAnnoucement = false;
            }
            if (((int)TempData.Peek("catId")).Equals(Convert.ToInt32(@ConfigurationManager.AppSettings.Get("TINTUC_ID"))))
            {
                partialGroupNewsModel.showNewsEvent = false;
                partialGroupNewsModel.showAnnoucement = true;
            }
        }
    </script>
    @Html.Partial("~/Views/News/Partials/_PartialGroupNewsJS.cshtml", partialGroupNewsModel)
}


