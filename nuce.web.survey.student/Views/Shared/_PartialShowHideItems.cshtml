@using System.Configuration;
@using System.IdentityModel.Tokens.Jwt;
@using System.Security.Claims;
@using nuce.web.survey.student.Common
@using nuce.web.shared

@{
    var handler = new JwtSecurityTokenHandler();
    var accessToken = Request.Cookies[UserParameters.JwtAccessToken];
    var username = "";
    string givenName = "";
    var roles = new List<string>();
    if (accessToken != null)
    {

        var jwtSecurityToken = handler.ReadJwtToken(accessToken.Value);

        //username
        var usernameClaim = jwtSecurityToken.Claims.FirstOrDefault(c => c.Type == ClaimTypes.Name);
        if (usernameClaim != null)
        {
            username = usernameClaim.Value;
        }

        //role
        roles = jwtSecurityToken.Claims.Where(c => c.Type == ClaimTypes.Role).Select(r => r.Value).ToList();
        givenName = jwtSecurityToken.Claims.FirstOrDefault(c => c.Type == ClaimTypes.GivenName)?.Value ?? "";
    }
}

<script>
    @*@if (roles.Contains(RoleNames.Student) && !roles.Contains(RoleNames.FakeStudent))
    {
        @:$(`#short-cut-ks-truoctn`).hide();
        @:$(`#short-cut-ks-vl`).hide();
    }
    @if (roles.Contains(RoleNames.UndergraduateStudent) && !roles.Contains(RoleNames.FakeStudent))
    {
        @:$(`#short-cut-ks-hdgd`).hide();
        @:$(`#short-cut-ks-vl`).hide();
    }
    @if (roles.Contains(RoleNames.GraduateStudent) && !roles.Contains(RoleNames.FakeStudent))
    {
        @:$(`#short-cut-ks-hdgd`).hide();
        @:$(`#short-cut-ks-truoctn`).hide();
    }*@
</script>
