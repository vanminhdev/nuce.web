@using nuce.web.survey.student.Common
@using nuce.web.survey.student.Models.JsonData
@model  List<QuestionJson>
@{
    ViewData["Title"] = "Bài khảo sát";
}

@helper GenerateAnswer(QuestionJson question)
{
    if (question.Type == QuestionType.SC)
    {
        foreach (var answer in question.Answers)
        {
            <div class="col">
                <div class="form-group">
                    <input questionCode="@question.Code" answerCode="@answer.Code" type="radio" name="@question.Code" />
                    <label class="text-dark">@Html.Raw(HttpUtility.HtmlDecode(HttpUtility.HtmlDecode(answer.Content)))</label>
                </div>
            </div>
        }
    }
    else if (question.Type == QuestionType.MC)
    {
        foreach (var answer in question.Answers)
        {
            <div class="col">
                <div class="form-group">
                    <input questionCode="@question.Code" answerCode="@answer.Code" type="checkbox" name="@question.Code" />
                    <label class="text-dark">@Html.Raw(HttpUtility.HtmlDecode(HttpUtility.HtmlDecode(answer.Content)))</label>
                </div>
            </div>
        }
    }
    else if (question.Type == QuestionType.SA)
    {
        <div class="col">
            <div class="form-group">
                <textarea class="form-control" style="min-height:100px;" questionCode="@question.Code" name="@question.Code"></textarea>
            </div>
        </div>
    }
}

<div class="container">
    <div class="row">
        <div class="col-12">
            @{
                var index = 1;
            }
            @foreach (var question in Model)
            {
                <div>
                    <div class="form-group col-12 mb-0 pl-0 pr-0">
                        <label id="@question.Code" class="text-dark">@index. @Html.Raw(HttpUtility.HtmlDecode(HttpUtility.HtmlDecode(question.Content)))</label>
                        @if (question.Image != null)
                        {
                            <div class="d-flex justify-content-center align-items-center">
                                <img src="@question.Image" style="max-width: 200px; border-radius:5px;" />
                            </div>
                        }
                        @question.Type
                    </div>
                    <div class="form-row pl-2 pr-2">
                        @GenerateAnswer(question)
                        @if (question.Type == QuestionType.GQ && question.ChildQuestion != null)
                        {
                            <div class="col">
                                <div class="form-group">
                                    @{
                                        var indexChild = 1;
                                    }
                                    @foreach (var questionChild in question.ChildQuestion)
                                    {
                                        <div class="form-group col-12 mb-0 pl-0 pr-0">
                                            <label id="@question.Code" class="text-dark">@index.@indexChild. @Html.Raw(HttpUtility.HtmlDecode(HttpUtility.HtmlDecode(question.Content)))</label>
                                            @if (question.Image != null)
                                            {
                                                <div class="d-flex justify-content-center align-items-center">
                                                    <img src="@question.Image" style="max-width: 200px; border-radius:5px;" />
                                                </div>
                                            }
                                        </div>
                                        <div class="form-row pl-2 pr-2">
                                            @GenerateAnswer(questionChild)
                                        </div>
                                        indexChild++;
                                    }
                                </div>
                            </div>
                        }
                    </div>
                </div>
                index++;
            }
        </div>
        <div class="col-12 d-flex justify-content-center">
            <button id="submit-survey" class="btn btn-primary">Nộp</button>
        </div>
    </div>
</div>

<div class="modal fade" id="modal-yes-no" tabindex="-1" role="dialog" aria-labelledby="modal-yes-no" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="modal-yes-no-title">Nộp bài khảo sát</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body" id="modal-yes-no-content">
                Xác nhận nộp bài khảo sát. <br />
                Lưu ý: bài khảo sát đã nộp không thể chỉnh sửa lại
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Không</button>
                <button id="choose-yes" type="button" class="btn btn-primary">Có</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="modal-alert" tabindex="-1" role="dialog" aria-labelledby="modal-yes-no" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Thông báo</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                Bạn chưa hoàn thành bài khảo sát
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" data-dismiss="modal">Tiếp tục</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @if (ViewData["SelectedAnswer"] != null)
    {
        <script>
            let selectedAnswer = @Html.Raw(ViewData["SelectedAnswer"]);
            selectedAnswer.forEach(element => {
                if (element.AnswerCode != undefined) {
                    $(`input[type=radio][questionCode=${element.QuestionCode}][answerCode=${element.AnswerCode}]`).attr("checked", true);
                } else if (element.AnswerCodes != undefined) {
                    element.AnswerCodes.forEach(function (c) {
                        $(`input[type=checkbox][questionCode=${element.QuestionCode}][answerCode=${c}]`).attr("checked", true);
                    });
                } else if (element.AnswerContent != undefined) {
                    $(`textarea[questionCode=${element.QuestionCode}]`).val(element.AnswerContent);
                }
            });
        </script>
    }
    @if (Model.Count > 0)
    {
        <script>

            $('input[type=radio]').each(function () {
                let seft = $(this);
                seft.click(function () {
                    let data = { classRoomCode: '@ViewData["classRoomCode"]', questionCode: seft.attr('questionCode'), answerCode: seft.attr('answerCode') };
                    $.ajax({
                        data: data,
                        dataType: 'json',
                        method: 'Post',
                        url: '/home/AutoSave',
                        timeout: 0,
                        complete: () => {}
                    }).done(function (data) {
                        console.log('radio');
                        if (data.type == "error") {
                            console.log(data.message, data.detailMessage);
                        }
                    }).fail(function (jqXHR, textStatus, errorThrown) {
                        $('#loading-screen').hide();
                        console.log(textStatus + ': ' + errorThrown);
                        console.log(jqXHR);
                    });
                });
            });

            $('input[type=checkbox]').each(function () {
                let seft = $(this);
                let proSeft = this;
                seft.click(function () {
                    let isAnswerCodesAdd = proSeft.checked;
                    $.ajax({
                        data: { classRoomCode: '@ViewData["classRoomCode"]', questionCode: seft.attr('questionCode'), answerCodeInMulSelect: seft.attr('answerCode'), isAnswerCodesAdd },
                        dataType: 'json',
                        method: 'Post',
                        url: '/home/AutoSave',
                        timeout: 0,
                        complete: () => { }
                    }).done(function (data) {
                        console.log('checkbox');
                        if (data.type == "error") {
                            console.log(data.message, data.detailMessage);
                        }
                    }).fail(function (jqXHR, textStatus, errorThrown) {
                        console.log(textStatus + ': ' + errorThrown);
                        console.log(jqXHR);
                    });
                });
            });

            $('textarea').each(function () {
                let seft = $(this);
                seft.keyup(
                    debounce(function () {
                        $.ajax({
                            data: { classRoomCode: '@ViewData["classRoomCode"]', questionCode: seft.attr('questionCode'), answerContent: seft.val() },
                            dataType: 'json',
                            method: 'Post',
                            url: '/home/AutoSave',
                            timeout: 0,
                            complete: () => { }
                        }).done(function (data) {
                            console.log('textarea');
                            if (data.type == "error") {
                                console.log(data.message, data.detailMessage);
                            }
                        }).fail(function (jqXHR, textStatus, errorThrown) {
                            console.log(textStatus + ': ' + errorThrown);
                            console.log(jqXHR);
                        });
                    }, 3000)
                );
            });
            $('#choose-yes').click(() => {
                $('#modal-yes-no').modal('hide');
                $('#loading-screen').show();
                $.ajax({
                    data: { classRoomCode: '@ViewData["classRoomCode"]' },
                    dataType: 'json',
                    method: 'Post',
                    url: '/home/TheSurveySubmit',
                    timeout: 0,
                    complete: () => {
                    }
                }).done(function (data) {
                    $('#loading-screen').hide();
                    if (data.type == "success") {
                        location.href = '/home';
                    }
                    else if (data.type == "error") {
                        console.log(data.message);
                    }
                }).fail(function (jqXHR, textStatus, errorThrown) {
                    $('#loading-screen').hide();
                    console.log(textStatus + ': ' + errorThrown);
                    console.log(jqXHR);
                });
            });
            let str = '@Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.Select(o => new { o.Code, o.Type }).ToList()))';
            function checkRequired() {
                let questions = JSON.parse(str);
                let hasChecked = false;
                for (let i = 0; i < questions.length; i++) {
                    if (questions[i].Type === "@QuestionType.SC" || questions[i].Type === "@QuestionType.MC") {
                        hasChecked = false;
                        $(`input[questionCode="${questions[i].Code}"]`).each(function () {
                            if (this.checked) {
                                hasChecked = true;
                            }
                        });
                        if (hasChecked === false) {
                            document.getElementById(`${questions[i].Code}`).scrollIntoView();
                            return false;
                        }
                    }
                }
                return true;
            }

            $('#submit-survey').click(function () {
                if (checkRequired()) {
                    $('#modal-yes-no').modal('show');
                } else {
                    $('#modal-alert').modal('show');
                }
            });
        </script>
    }}

